/**
 * Firebase Cloud Functions
 * ‡∏£‡∏ß‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö backend
 */

import { onCall, HttpsError } from 'firebase-functions/v2/https';
import * as functions from 'firebase-functions';
import * as admin from 'firebase-admin';

// Initialize Firebase Admin
admin.initializeApp();

/**
 * Interface ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö request ‡πÅ‡∏•‡∏∞ response
 */
interface VerifyRecaptchaRequest {
    token: string;
    action: string;
}

interface VerifyRecaptchaResponse {
    success: boolean;
    score: number;
    action: string;
    message?: string;
}

interface SendInvitationEmailRequest {
    invitationId: string;
    email: string;
    companyName: string;
    role: string;
    invitedByName?: string;
    invitedByEmail?: string;
    token: string;
    message?: string;
}

interface SendInvitationEmailResponse {
    success: boolean;
    message: string;
}

/**
 * Cloud Function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö verify reCAPTCHA token (v2 with App Check)
 * 
 * @param request - { data: { token: string, action: string }, app: AppCheckData }
 * @returns { success: boolean, score: number, action: string }
 */
export const verifyRecaptcha = onCall(
    {
        enforceAppCheck: true, // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏°‡∏µ valid App Check token
    },
    async (request): Promise<VerifyRecaptchaResponse> => {
        const { token, action } = request.data as VerifyRecaptchaRequest;

        // Log App Check info
        console.log('App Check verified:', {
            appId: request.app?.appId,
            alreadyConsumed: request.app?.alreadyConsumed,
        });

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö input
        if (!token || !action) {
            throw new HttpsError(
                'invalid-argument',
                '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ token ‡πÅ‡∏•‡∏∞ action'
            );
        }

        try {
            // ‡∏î‡∏∂‡∏á Secret Key ‡∏à‡∏≤‡∏Å environment config
            const secretKey = functions.config().recaptcha?.secret_key;

            if (!secretKey) {
                // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ secret key ‡πÉ‡∏´‡πâ‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö development)
                console.warn('‚ö†Ô∏è reCAPTCHA Secret Key ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤');
                return {
                    success: true,
                    score: 1.0,
                    action,
                    message: 'Secret key not configured, bypassing verification'
                };
            }

            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Google reCAPTCHA API ‡πÄ‡∏û‡∏∑‡πà‡∏≠ verify token
            const verifyUrl = 'https://www.google.com/recaptcha/api/siteverify';
            const params = new URLSearchParams({
                secret: secretKey,
                response: token,
            });

            const response = await fetch(verifyUrl, {
                method: 'POST',
                body: params,
            });

            const result = await response.json() as {
                success: boolean;
                score: number;
                action: string;
                challenge_ts: string;
                hostname: string;
                'error-codes'?: string[];
            };

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            if (!result.success) {
                console.error('reCAPTCHA verification failed:', result['error-codes']);
                return {
                    success: false,
                    score: 0,
                    action,
                    message: '‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö reCAPTCHA ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß'
                };
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ action ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (result.action !== action) {
                console.error('Action mismatch:', {
                    expected: action,
                    received: result.action
                });
                return {
                    success: false,
                    score: result.score,
                    action: result.action,
                    message: 'Action ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô'
                };
            }

            // Log score ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö monitoring
            console.log('reCAPTCHA verification:', {
                action,
                score: result.score,
                hostname: result.hostname,
                timestamp: result.challenge_ts
            });

            // Return ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            return {
                success: true,
                score: result.score,
                action: result.action,
                message: result.score >= 0.5 
                    ? '‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö' 
                    : 'Score ‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå'
            };

        } catch (error) {
            console.error('Error verifying reCAPTCHA:', error);
            throw new HttpsError(
                'internal',
                '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö reCAPTCHA'
            );
        }
    }
);

/**
 * Cloud Function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£ (v2)
 * 
 * @param request - { data: SendInvitationEmailRequest, auth: AuthData }
 * @returns { success: boolean, message: string }
 */
export const sendInvitationEmail = onCall(
    async (request): Promise<SendInvitationEmailResponse> => {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ user login ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (!request.auth) {
            throw new HttpsError(
                'unauthenticated',
                '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Login ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç'
            );
        }

        const {
            invitationId,
            email,
            companyName,
            role,
            invitedByName,
            invitedByEmail,
            token,
            message,
        } = request.data as SendInvitationEmailRequest;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö input
        if (!invitationId || !email || !companyName || !role || !token) {
            throw new HttpsError(
                'invalid-argument',
                '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô'
            );
        }

        try {
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á invitation link
            const baseUrl = process.env.FUNCTIONS_EMULATOR
                ? 'http://localhost:5173'
                : 'https://your-app-domain.web.app'; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô domain ‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            
            const invitationLink = `${baseUrl}/accept-invitation?token=${token}`;

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏• (HTML)
            const emailHtml = `
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        .container {
            max-width: 600px;
            margin: 20px auto;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        .header h1 {
            margin: 0;
            font-size: 24px;
        }
        .content {
            padding: 30px;
        }
        .content h2 {
            color: #667eea;
            margin-top: 0;
        }
        .invitation-box {
            background: #f8f9fa;
            border-left: 4px solid #667eea;
            padding: 15px;
            margin: 20px 0;
        }
        .invitation-box p {
            margin: 5px 0;
        }
        .button {
            display: inline-block;
            padding: 12px 30px;
            background: #667eea;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            margin: 20px 0;
            font-weight: bold;
        }
        .button:hover {
            background: #5568d3;
        }
        .footer {
            background: #f8f9fa;
            padding: 20px;
            text-align: center;
            font-size: 12px;
            color: #666;
        }
        .warning {
            background: #fff3cd;
            border: 1px solid #ffc107;
            padding: 10px;
            border-radius: 4px;
            margin: 15px 0;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéâ ‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£</h1>
        </div>
        <div class="content">
            <h2>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞/‡∏Ñ‡∏£‡∏±‡∏ö!</h2>
            <p>‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£ <strong>${companyName}</strong></p>
            
            <div class="invitation-box">
                <p><strong>üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</strong> ${email}</p>
                <p><strong>üë§ ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó:</strong> ${role === 'admin' ? 'Admin (‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£)' : 'Member (‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ)'}</p>
                ${invitedByName ? `<p><strong>‚úâÔ∏è ‡πÄ‡∏ä‡∏¥‡∏ç‡πÇ‡∏î‡∏¢:</strong> ${invitedByName}${invitedByEmail ? ` (${invitedByEmail})` : ''}</p>` : ''}
            </div>
            
            ${message ? `
            <div class="invitation-box">
                <p><strong>üí¨ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏¥‡∏ç:</strong></p>
                <p>${message}</p>
            </div>
            ` : ''}
            
            <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç:</p>
            
            <center>
                <a href="${invitationLink}" class="button">‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç</a>
            </center>
            
            <div class="warning">
                ‚ö†Ô∏è <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô 7 ‡∏ß‡∏±‡∏ô<br>
                ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡∏Å‡πÄ‡∏â‡∏¢‡∏ï‡πà‡∏≠‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ
            </div>
            
            <p style="font-size: 12px; color: #666; margin-top: 20px;">
                ‡∏´‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå:<br>
                <a href="${invitationLink}" style="color: #667eea; word-break: break-all;">${invitationLink}</a>
            </p>
        </div>
        <div class="footer">
            <p>‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</p>
            <p>¬© ${new Date().getFullYear()} All rights reserved.</p>
        </div>
    </div>
</body>
</html>
            `;

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏• (Plain Text)
            const emailText = `
‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£

‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞/‡∏Ñ‡∏£‡∏±‡∏ö!

‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£ ${companyName}

‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:
- ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${email}
- ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ${role === 'admin' ? 'Admin (‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£)' : 'Member (‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ)'}
${invitedByName ? `- ‡πÄ‡∏ä‡∏¥‡∏ç‡πÇ‡∏î‡∏¢: ${invitedByName}${invitedByEmail ? ` (${invitedByEmail})` : ''}` : ''}

${message ? `‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏¥‡∏ç:\n${message}\n` : ''}

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç:
${invitationLink}

‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô 7 ‡∏ß‡∏±‡∏ô
‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡∏Å‡πÄ‡∏â‡∏¢‡∏ï‡πà‡∏≠‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ

---
‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
¬© ${new Date().getFullYear()} All rights reserved.
            `;

            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏•‡∏á Firestore (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Email Extension ‡∏´‡∏£‡∏∑‡∏≠ Custom Email Service)
            await admin.firestore().collection('mail').add({
                to: email,
                message: {
                    subject: `üéâ ‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£ ${companyName}`,
                    text: emailText,
                    html: emailHtml,
                },
                invitationId,
                createdAt: admin.firestore.FieldValue.serverTimestamp(),
            });

            console.log(`‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÄ‡∏ä‡∏¥‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${email} (Invitation ID: ${invitationId})`);

            return {
                success: true,
                message: '‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÄ‡∏ä‡∏¥‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            };

        } catch (error) {
            console.error('‚ùå ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÄ‡∏ä‡∏¥‡∏ç‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
            throw new HttpsError(
                'internal',
                '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÄ‡∏ä‡∏¥‡∏ç'
            );
        }
    }
);
