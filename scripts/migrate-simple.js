#!/usr/bin/env node

/**
 * Script ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ Nature Estate (‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö Firebase CLI)
 * 
 * ‡∏ï‡πâ‡∏≠‡∏á Login Firebase CLI ‡∏Å‡πà‡∏≠‡∏ô: firebase login
 * 
 * ‡∏ß‡∏¥‡∏ò‡∏µ‡∏£‡∏±‡∏ô:
 * node scripts/migrate-simple.js
 */

const admin = require('firebase-admin');
const readline = require('readline');

// ‡πÉ‡∏ä‡πâ Application Default Credentials ‡∏à‡∏≤‡∏Å Firebase CLI
process.env.GOOGLE_APPLICATION_CREDENTIALS = process.env.HOME + '/.config/firebase/sinanan.ac.th_gmail.com_application_default_credentials.json';

// Initialize Admin SDK with Application Default Credentials
try {
    admin.initializeApp({
        projectId: 'ecertonline-29a67'
    });
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
} catch (error) {
    console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase:', error.message);
    console.log('\nüí° ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:');
    console.log('   firebase login');
    process.exit(1);
}

const db = admin.firestore();
const TARGET_COMPANY_NAME = "Nature Estate";

// ‡∏™‡∏£‡πâ‡∏≤‡∏á readline interface ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö input
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

/**
 * ‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
 */
function question(query) {
    return new Promise(resolve => rl.question(query, resolve));
}

/**
 * ‡∏´‡∏≤ User ID ‡∏à‡∏≤‡∏Å Email
 */
async function getUserIdFromEmail() {
    const email = await question('\nüìß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà Email ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ Login (sinanan.ac.th@gmail.com): ');
    const emailToUse = email.trim() || 'sinanan.ac.th@gmail.com';
    
    try {
        const userRecord = await admin.auth().getUserByEmail(emailToUse);
        return userRecord.uid;
    } catch (error) {
        console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö User ‡∏î‡πâ‡∏ß‡∏¢ email: ${emailToUse}`);
        throw error;
    }
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
 */
async function showStats(userId) {
    console.log('\nüìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
    console.log('='.repeat(60));
    
    // ‡∏ô‡∏±‡∏ö Companies
    const companiesSnapshot = await db.collection('companies').get();
    console.log(`üìÅ Companies: ${companiesSnapshot.size} ‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£`);
    companiesSnapshot.docs.forEach(doc => {
        const data = doc.data();
        console.log(`   - ${data.name} (ID: ${doc.id})`);
    });
    
    // ‡∏ô‡∏±‡∏ö Delivery Notes
    const deliverySnapshot = await db.collection('deliveryNotes')
        .where('userId', '==', userId)
        .get();
    console.log(`\nüì¶ Delivery Notes: ${deliverySnapshot.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    
    // ‡πÅ‡∏ö‡πà‡∏á‡∏ï‡∏≤‡∏° company
    const deliveryByCompany = {};
    deliverySnapshot.docs.forEach(doc => {
        const companyId = doc.data().companyId || '‡πÑ‡∏°‡πà‡∏°‡∏µ company';
        deliveryByCompany[companyId] = (deliveryByCompany[companyId] || 0) + 1;
    });
    Object.entries(deliveryByCompany).forEach(([companyId, count]) => {
        console.log(`   - ${companyId}: ${count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    });
    
    // ‡∏ô‡∏±‡∏ö Warranty Cards
    const warrantySnapshot = await db.collection('warrantyCards')
        .where('userId', '==', userId)
        .get();
    console.log(`\nüõ°Ô∏è  Warranty Cards: ${warrantySnapshot.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    
    // ‡πÅ‡∏ö‡πà‡∏á‡∏ï‡∏≤‡∏° company
    const warrantyByCompany = {};
    warrantySnapshot.docs.forEach(doc => {
        const companyId = doc.data().companyId || '‡πÑ‡∏°‡πà‡∏°‡∏µ company';
        warrantyByCompany[companyId] = (warrantyByCompany[companyId] || 0) + 1;
    });
    Object.entries(warrantyByCompany).forEach(([companyId, count]) => {
        console.log(`   - ${companyId}: ${count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    });
    
    console.log('='.repeat(60));
}

/**
 * ‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Nature Estate Company
 */
async function findOrCreateNatureEstate(userId) {
    console.log(`\nüîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ${TARGET_COMPANY_NAME}...`);
    
    const snapshot = await db.collection('companies')
        .where('name', '==', TARGET_COMPANY_NAME)
        .get();
    
    if (!snapshot.empty) {
        const companyId = snapshot.docs[0].id;
        console.log(`‚úÖ ‡∏û‡∏ö ${TARGET_COMPANY_NAME} ‡πÅ‡∏•‡πâ‡∏ß (ID: ${companyId})`);
        return companyId;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    console.log(`üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á ${TARGET_COMPANY_NAME} ‡πÉ‡∏´‡∏°‡πà...`);
    const companyRef = db.collection('companies').doc();
    const companyId = companyRef.id;
    
    await companyRef.set({
        name: TARGET_COMPANY_NAME,
        address: '',
        userId: userId,
        logoUrl: null,
        logoType: 'default',
        defaultLogoUrl: null,
        memberCount: 1,
        createdAt: admin.firestore.FieldValue.serverTimestamp(),
        updatedAt: admin.firestore.FieldValue.serverTimestamp(),
    });
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° member
    const memberRef = db.collection('companyMembers').doc();
    const userRecord = await admin.auth().getUser(userId);
    
    await memberRef.set({
        companyId: companyId,
        userId: userId,
        email: userRecord.email || '',
        phoneNumber: userRecord.phoneNumber || null,
        displayName: userRecord.displayName || 'Admin',
        role: 'admin',
        status: 'active',
        joinedAt: admin.firestore.FieldValue.serverTimestamp(),
        createdAt: admin.firestore.FieldValue.serverTimestamp(),
        updatedAt: admin.firestore.FieldValue.serverTimestamp(),
    });
    
    console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á ${TARGET_COMPANY_NAME} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
    return companyId;
}

/**
 * ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
 */
async function migrateData(companyId, userId) {
    console.log('\nüîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
    console.log('='.repeat(60));
    
    // ‡∏¢‡πâ‡∏≤‡∏¢ Delivery Notes
    console.log('\nüì¶ ‡∏¢‡πâ‡∏≤‡∏¢ Delivery Notes...');
    const deliverySnapshot = await db.collection('deliveryNotes')
        .where('userId', '==', userId)
        .get();
    
    let deliveryCount = 0;
    const batch = db.batch();
    
    deliverySnapshot.docs.forEach(doc => {
        if (doc.data().companyId !== companyId) {
            batch.update(doc.ref, {
                companyId: companyId,
                updatedAt: admin.firestore.FieldValue.serverTimestamp()
            });
            deliveryCount++;
        }
    });
    
    await batch.commit();
    console.log(`‚úÖ ‡∏¢‡πâ‡∏≤‡∏¢ ${deliveryCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    
    // ‡∏¢‡πâ‡∏≤‡∏¢ Warranty Cards
    console.log('\nüõ°Ô∏è  ‡∏¢‡πâ‡∏≤‡∏¢ Warranty Cards...');
    const warrantySnapshot = await db.collection('warrantyCards')
        .where('userId', '==', userId)
        .get();
    
    let warrantyCount = 0;
    const batch2 = db.batch();
    
    warrantySnapshot.docs.forEach(doc => {
        if (doc.data().companyId !== companyId) {
            batch2.update(doc.ref, {
                companyId: companyId,
                updatedAt: admin.firestore.FieldValue.serverTimestamp()
            });
            warrantyCount++;
        }
    });
    
    await batch2.commit();
    console.log(`‚úÖ ‡∏¢‡πâ‡∏≤‡∏¢ ${warrantyCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    
    return { deliveryCount, warrantyCount };
}

/**
 * Main Function
 */
async function main() {
    console.log('\nüöÄ Migration Script - ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ Nature Estate');
    console.log('='.repeat(60));
    
    try {
        // 1. ‡∏´‡∏≤ User ID
        const userId = await getUserIdFromEmail();
        console.log(`‚úÖ User ID: ${userId}`);
        
        // 2. ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢
        console.log('\nüìä ‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢:');
        await showStats(userId);
        
        // 3. ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
        const confirm = await question('\n‚ö†Ô∏è  ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ Nature Estate? (yes/no): ');
        if (confirm.toLowerCase() !== 'yes') {
            console.log('‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢');
            rl.close();
            process.exit(0);
        }
        
        // 4. ‡∏´‡∏≤/‡∏™‡∏£‡πâ‡∏≤‡∏á Nature Estate
        const companyId = await findOrCreateNatureEstate(userId);
        
        // 5. ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        const { deliveryCount, warrantyCount } = await migrateData(companyId, userId);
        
        // 6. ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏¢‡πâ‡∏≤‡∏¢
        console.log('\nüìä ‡∏´‡∏•‡∏±‡∏á‡∏¢‡πâ‡∏≤‡∏¢:');
        await showStats(userId);
        
        // 7. ‡∏™‡∏£‡∏∏‡∏õ
        console.log('\n' + '='.repeat(60));
        console.log('‚úÖ Migration ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
        console.log(`   üì¶ ‡∏¢‡πâ‡∏≤‡∏¢ Delivery Notes: ${deliveryCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        console.log(`   üõ°Ô∏è  ‡∏¢‡πâ‡∏≤‡∏¢ Warranty Cards: ${warrantyCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        console.log(`   üéØ ‡πÑ‡∏õ‡∏¢‡∏±‡∏á: ${TARGET_COMPANY_NAME}`);
        console.log('='.repeat(60));
        
        rl.close();
        process.exit(0);
    } catch (error) {
        console.error('\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
        rl.close();
        process.exit(1);
    }
}

// Run
main();

