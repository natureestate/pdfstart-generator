/**
 * Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Super Admin
 * ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° Super Admin ‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
 * 
 * ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:
 * 1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç EMAIL ‡πÅ‡∏•‡∏∞ DISPLAY_NAME ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
 * 2. ‡∏£‡∏±‡∏ô: npx ts-node scripts/setup-superadmin.ts
 */

import * as admin from 'firebase-admin';
import * as readline from 'readline';

// Initialize Firebase Admin
try {
    admin.initializeApp();
    console.log('‚úÖ Firebase Admin initialized');
} catch (error) {
    console.log('‚ÑπÔ∏è Firebase Admin already initialized');
}

const db = admin.firestore();

// ========================================
// ‚ö†Ô∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
// ========================================
const SUPER_ADMIN_EMAIL = 'YOUR_EMAIL@example.com';  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const DISPLAY_NAME = 'Super Admin';                   // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
// ========================================

/**
 * ‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å user
 */
function question(query: string): Promise<string> {
    const rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout,
    });

    return new Promise(resolve => {
        rl.question(query, (answer) => {
            rl.close();
            resolve(answer);
        });
    });
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Super Admin ‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
 */
async function checkExistingSuperAdmin(userId: string): Promise<boolean> {
    try {
        const snapshot = await db.collection('superAdmins')
            .where('userId', '==', userId)
            .get();
        
        return !snapshot.empty;
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏ä‡πá‡∏Ñ Super Admin ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
        return false;
    }
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Super Admin
 */
async function createSuperAdmin(userId: string, email: string, displayName: string) {
    try {
        const superAdminData = {
            userId,
            email: email.toLowerCase(),
            displayName,
            role: 'superadmin',
            permissions: [
                'view_all',
                'manage_users',
                'manage_companies',
                'manage_invitations',
                'view_stats',
            ],
            createdAt: admin.firestore.FieldValue.serverTimestamp(),
            updatedAt: admin.firestore.FieldValue.serverTimestamp(),
        };

        await db.collection('superAdmins').add(superAdminData);

        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Super Admin ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        console.log('üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•:', email);
        console.log('üë§ ‡∏ä‡∏∑‡πà‡∏≠:', displayName);
        console.log('üîë User ID:', userId);
    } catch (error) {
        console.error('‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á Super Admin ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
        throw error;
    }
}

/**
 * Main function
 */
async function main() {
    console.log('='.repeat(60));
    console.log('üîê Setup Super Admin Script');
    console.log('='.repeat(60));
    console.log();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    if (SUPER_ADMIN_EMAIL === 'YOUR_EMAIL@example.com') {
        console.error('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏ô script ‡∏Å‡πà‡∏≠‡∏ô!');
        console.error('   ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå: scripts/setup-superadmin.ts');
        console.error('   ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç SUPER_ADMIN_EMAIL ‡πÅ‡∏•‡∏∞ DISPLAY_NAME');
        process.exit(1);
    }

    console.log('üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏• Super Admin:', SUPER_ADMIN_EMAIL);
    console.log('üë§ ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á:', DISPLAY_NAME);
    console.log();

    // ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    const confirm = await question('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (yes/no): ');
    if (confirm.toLowerCase() !== 'yes' && confirm.toLowerCase() !== 'y') {
        console.log('‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô');
        process.exit(0);
    }

    console.log();
    console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ user...');

    try {
        // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ user ‡∏à‡∏≤‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•
        const userRecord = await admin.auth().getUserByEmail(SUPER_ADMIN_EMAIL);
        console.log('‚úÖ ‡∏û‡∏ö user:', userRecord.email);
        console.log('üîë User ID:', userRecord.uid);

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Super Admin ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const exists = await checkExistingSuperAdmin(userRecord.uid);
        if (exists) {
            console.log('‚ö†Ô∏è User ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô Super Admin ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
            process.exit(0);
        }

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á Super Admin
        console.log();
        console.log('üìù ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Super Admin...');
        await createSuperAdmin(userRecord.uid, userRecord.email!, DISPLAY_NAME);

        console.log();
        console.log('='.repeat(60));
        console.log('üéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!');
        console.log('='.repeat(60));
        console.log();
        console.log('‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:');
        console.log('1. Deploy Firestore Rules:');
        console.log('   firebase deploy --only firestore:rules');
        console.log();
        console.log('2. Login ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏µ‡πÄ‡∏°‡∏•:', SUPER_ADMIN_EMAIL);
        console.log('3. ‡πÄ‡∏Ç‡πâ‡∏≤ Super Admin Dashboard');
        console.log();

    } catch (error: any) {
        if (error.code === 'auth/user-not-found') {
            console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö user ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
            console.error('   ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Å‡πà‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•');
        } else {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
        }
        process.exit(1);
    }

    process.exit(0);
}

// Run
main().catch((error) => {
    console.error('‚ùå Fatal Error:', error);
    process.exit(1);
});

